plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            'org.selenide:selenide-selenoid:2.2.1',
            'com.codeborne:selenide:6.3.4',
            'io.qameta.allure:allure-selenide:2.17.3',
            'org.junit.jupiter:junit-jupiter:5.8.2',
            'org.assertj:assertj-core:3.22.0',
            'com.codeborne:pdf-test:1.7.0',
            'org.aeonbits.owner:owner:1.0.12',
            'org.slf4j:slf4j-simple:1.7.36')
}

allure {
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.17.2")
            }
        }

    }
    report {
        version.set("2.17.2")
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}